options {
  STATIC=false;
  JDK_VERSION = "1.8";
  DEBUG_PARSER = true;
}


PARSER_BEGIN(PercentParser)
package com.example.kotlinspringboot.parser.percent;

import java.io.*;
import java.util.*;

public class PercentParser {

    private StringBuffer sb = new StringBuffer();
    static void substitute2(String inString) {
        PercentParser parser = new PercentParser(new StringReader(inString));

        try{
            parser.start();
        } catch (Exception e){
            throw new RuntimeException(e);
        }
    }


}
PARSER_END(PercentParser)


//
//TOKEN : {
//    < NON_GROUP_PHASE: (<NONGROUPLETTER>)*  >
//|   < OPEN_BRACE: "{" >
//|   < CLOSE_BRACE: "}" >
//|   < #NONGROUPLETTER: ~[ "{", "}"  ] | <_ESCAPED_CHAR> >
//|   < #_ESCAPED_CHAR:    "\\" ~[] >  // every character that follows a backslash is considered as an escaped character
//}

TOKEN :
{
  <LBRACE: "{">
| <RBRACE: "}">
| < PHASE: <LETTER> (<LETTER>)*  >
|   < #LETTER: ~[ "{", "}" ] >
| <OTHER: ~[] >
}

SKIP : {
    < COMMENTS: "%!--" (~[])* "--%" >
}

void start() :
{ int count; }
{
    Group()
//    { System.out.println("The levels of nesting is " + count); }
}


void Group() :
{  }
{
    <PHASE>
    |
    (
      <LBRACE>  Group() <RBRACE>
    )*

}

void SubGroup() :
{}
{
    <PHASE>
    |
    (
      <LBRACE> Group() <RBRACE>
    )
}

//void group(int i):
//{
//    Token brace1;
//    Token brace2;
//}
//{
//    noGroup()
//    |
//    (
//        { i++; }
//        brace1 = <OPEN_BRACE>
//        { sb.append( i >= 1 ? brace1.image : ""); }
//        group(i)
//        brace2 = <CLOSE_BRACE>
//        { sb.append( i >= 1 ? brace2.image : ""); }
//        { i--; }
//    )*
//}
//
//void noGroup() :
//{
//    Token token;
//}
//{
//    token = <NON_GROUP_PHASE>
//    { sb.append(token.image); }
//}
//
